{"version":3,"file":"wcf-addons.min.js","names":["$","window","on","width","elementorFrontend","config","responsive","activeBreakpoints","Countdown","elementorModules","frontend","handlers","Base","extend","bindEvents","this","run","_this","x","setInterval","count_down","distance","Date","getElementSettings","getTime","days","Math","floor","hours","minutes","seconds","clearInterval","findElement","html","time_finish_content","timer_content","_this2","times","arguments","length","undefined","time_content","each","index","time","title","concat","description","finish_content","hooks","addAction","$scope","submit_btn","classes","attr","replaceWith","class","type","elementsHandler","addHandler","$element","searchWrapper","toggle_open","toggle_close","e","addClass","removeClass","focus","focusout","jQuery"],"sources":["wcf-addons.js"],"mappings":"CACA,SAAUA,GAOTA,EAAEC,QAAQC,GAAG,2BAA2B,WACpBF,EAAEC,QAAQE,QACFC,kBAAkBC,OAAOC,WAAWC,kBAD/D,IAeIC,EAbUC,iBAAiBC,SAASC,SAASC,KAazBC,OAAO,CAC9BC,WAAY,WACXC,KAAKC,KACN,EACAA,IAAK,WACJ,IAAIC,EAAQF,KAERG,EAAIC,aAAY,WACnBF,EAAMG,WAAWF,EAClB,GAAG,KACHH,KAAKK,WAAWF,EACjB,EACAE,WAAY,SAAoBF,GAE/B,IAMIG,EANgB,IAAIC,KAAKP,KAAKQ,mBAAmB,6BAA6BC,WAGxE,IAAIF,MAAOE,UAMjBC,EAAOC,KAAKC,MAAMN,EAAW,OAC7BO,EAAQF,KAAKC,MAAMN,EAAW,MAAwB,MACtDQ,EAAUH,KAAKC,MAAMN,EAAW,KAAmB,KACnDS,EAAUJ,KAAKC,MAAMN,EAAW,IAAc,KAG9CA,EAAW,GACdU,cAAcb,GACdH,KAAKiB,YAAY,mBAAmBC,KAAKlB,KAAKmB,wBAE9CnB,KAAKiB,YAAY,mBAAmBC,KAAKlB,KAAKoB,cAAc,CAC3DV,KAAQA,EACRG,MAASA,EACTC,QAAWA,EACXC,QAAWA,IAGd,EACAK,cAAe,WACd,IAAIC,EAASrB,KACTsB,EAAQC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAChF,GAAI,IAAMD,EAAME,OAAhB,CAGA,IAAIE,EAAe,GAKnB,OAJAzC,EAAE0C,KAAKL,GAAO,SAASM,EAAOC,GAC7B,IAAIC,EAAQT,EAAOb,mBAAmB,mBAAmBuB,OAAOH,EAAO,WACvEF,GAAgB,wCAAyCK,OAAOH,EAAO,+BAAiCG,OAAOH,EAAO,YAAaG,OAAOF,EAAM,mCAAoCE,OAAOH,EAAO,YAAaG,OAAOD,EAAO,gBAC9N,IACOJ,CANP,CAOD,EACAP,oBAAqB,WACpB,IAAIW,EAAQ9B,KAAKQ,mBAAmB,qBAChCwB,EAAchC,KAAKQ,mBAAmB,oBACtCyB,EAAiB,iCAQrB,OAPIH,IACHG,GAAkB,uCAAyCF,OAAOD,EAAO,WAEtEE,IACHC,GAAkB,sCAAwCF,OAAOC,EAAa,WAE/EC,GAAkB,QAEnB,IAED5C,kBAAkB6C,MAAMC,UAAU,sDAhFb,SAAwBC,GAC5C,IAAIC,EAAapD,EAAE,gBAAiBmD,GAChCE,EAAUD,EAAWE,KAAK,SAC9BD,GAAW,oBAAsBrD,EAAE,qBAAsBmD,GAAQG,KAAK,aACtEF,EAAWG,aAAY,WACtB,OAAOvD,EAAE,YAAa,CACrBiC,KAAMjC,EAAE,aAAaiC,OAASmB,EAAWE,KAAK,SAC9CE,MAASH,EACTI,KAAM,UAER,GACD,IAsEArD,kBAAkB6C,MAAMC,UAAU,iDAAiD,SAASC,GAC3F/C,kBAAkBsD,gBAAgBC,WAAWnD,EAAW,CACvDoD,SAAUT,GAEZ,IAkBA/C,kBAAkB6C,MAAMC,UAAU,0DAjBrB,SAAgBC,GAC5B,IAAIU,EAAgB7D,EAAE,mBAAoBmD,GACtCW,EAAc9D,EAAE,gBAAiBmD,GACjCY,EAAe/D,EAAE,iBAAkBmD,GACvCW,EAAY5D,GAAG,SAAS,SAAS8D,GAChCH,EAAcI,SAAS,iBACxB,IACAF,EAAa7D,GAAG,SAAS,SAAS8D,GACjCH,EAAcK,YAAY,iBAC3B,IACAlE,EAAE,QAASmD,GAAQgB,OAAM,WACxBnE,EAAE,mBAAoBmD,GAAQc,SAAS,yBACxC,IACAjE,EAAE,QAASmD,GAAQiB,UAAS,WAC3BpE,EAAE,mBAAoBmD,GAAQe,YAAY,yBAC3C,GACD,GAED,GACA,CApHD,CAoHGG","sourcesContent":["/* global WCF_ADDONS_JS */\n(function($) {\n\t/**\n\t * @param $scope The Widget wrapper element as a jQuery element\n\t * @param $ The jQuery alias\n\t */\n\n\t// Make sure you run this code under Elementor.\n\t$(window).on('elementor/frontend/init', function() {\n\t\tvar device_width = $(window).width();\n\t\tvar elementorBreakpoints = elementorFrontend.config.responsive.activeBreakpoints;\n\t\tvar Modules = elementorModules.frontend.handlers.Base;\n\t\tvar contact_form_7 = function contact_form_7($scope) {\n\t\t\tvar submit_btn = $('.wpcf7-submit', $scope);\n\t\t\tvar classes = submit_btn.attr('class');\n\t\t\tclasses += ' wcf-btn-default ' + $('.wcf--form-wrapper', $scope).attr('btn-hover');\n\t\t\tsubmit_btn.replaceWith(function() {\n\t\t\t\treturn $('<button/>', {\n\t\t\t\t\thtml: $('.btn-icon').html() + submit_btn.attr('value'),\n\t\t\t\t\t\"class\": classes,\n\t\t\t\t\ttype: 'submit'\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tvar Countdown = Modules.extend({\n\t\t\tbindEvents: function bindEvents() {\n\t\t\t\tthis.run();\n\t\t\t},\n\t\t\trun: function run() {\n\t\t\t\tvar _this = this;\n\t\t\t\t// Update the count down every 1 second\n\t\t\t\tvar x = setInterval(function() {\n\t\t\t\t\t_this.count_down(x);\n\t\t\t\t}, 1000);\n\t\t\t\tthis.count_down(x);\n\t\t\t},\n\t\t\tcount_down: function count_down(x) {\n\t\t\t\t// Set the date we're counting down to\n\t\t\t\tvar countDownDate = new Date(this.getElementSettings('countdown_timer_due_date')).getTime();\n\n\t\t\t\t// Get today's date and time\n\t\t\t\tvar now = new Date().getTime();\n\n\t\t\t\t// Find the distance between now and the count down date\n\t\t\t\tvar distance = countDownDate - now;\n\n\t\t\t\t// Time calculations for days, hours, minutes and seconds\n\t\t\t\tvar days = Math.floor(distance / (1000 * 60 * 60 * 24));\n\t\t\t\tvar hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n\t\t\t\tvar minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n\t\t\t\tvar seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n\t\t\t\t// If the count down is over, write some text\n\t\t\t\tif (distance < 0) {\n\t\t\t\t\tclearInterval(x);\n\t\t\t\t\tthis.findElement('.wcf--countdown').html(this.time_finish_content());\n\t\t\t\t} else {\n\t\t\t\t\tthis.findElement('.wcf--countdown').html(this.timer_content({\n\t\t\t\t\t\t'days': days,\n\t\t\t\t\t\t'hours': hours,\n\t\t\t\t\t\t'minutes': minutes,\n\t\t\t\t\t\t'seconds': seconds\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t},\n\t\t\ttimer_content: function timer_content() {\n\t\t\t\tvar _this2 = this;\n\t\t\t\tvar times = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\t\t\tif (0 === times.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar time_content = '';\n\t\t\t\t$.each(times, function(index, time) {\n\t\t\t\t\tvar title = _this2.getElementSettings(\"countdown_timer_\".concat(index, \"_label\"));\n\t\t\t\t\ttime_content += \"<div class=\\\"timer-content timer-item-\".concat(index, \" \\\"><span class=\\\"time-count \").concat(index, \"-count\\\">\").concat(time, \"</span><span class=\\\"time-title \").concat(index, \"-title\\\">\").concat(title, \"</span></div>\");\n\t\t\t\t});\n\t\t\t\treturn time_content;\n\t\t\t},\n\t\t\ttime_finish_content: function time_finish_content() {\n\t\t\t\tvar title = this.getElementSettings('time_expire_title');\n\t\t\t\tvar description = this.getElementSettings('time_expire_desc');\n\t\t\t\tvar finish_content = '<div class=\"countdown-expire\">';\n\t\t\t\tif (title) {\n\t\t\t\t\tfinish_content += \"<div class=\\\"countdown-expire-title\\\">\".concat(title, \"</div>\");\n\t\t\t\t}\n\t\t\t\tif (description) {\n\t\t\t\t\tfinish_content += \"<div class=\\\"countdown-expire-desc\\\">\".concat(description, \"</div>\");\n\t\t\t\t}\n\t\t\t\tfinish_content += '</div>';\n\t\t\t\treturn finish_content;\n\t\t\t}\n\t\t});\n\t\telementorFrontend.hooks.addAction(\"frontend/element_ready/wcf--contact-form-7.default\", contact_form_7);\n\t\telementorFrontend.hooks.addAction('frontend/element_ready/wcf--countdown.default', function($scope) {\n\t\t\telementorFrontend.elementsHandler.addHandler(Countdown, {\n\t\t\t\t$element: $scope\n\t\t\t});\n\t\t});\n\t\tvar Search = function Search($scope) {\n\t\t\tvar searchWrapper = $('.search--wrapper', $scope);\n\t\t\tvar toggle_open = $('.toggle--open', $scope);\n\t\t\tvar toggle_close = $('.toggle--close', $scope);\n\t\t\ttoggle_open.on('click', function(e) {\n\t\t\t\tsearchWrapper.addClass('search-visible');\n\t\t\t});\n\t\t\ttoggle_close.on('click', function(e) {\n\t\t\t\tsearchWrapper.removeClass('search-visible');\n\t\t\t});\n\t\t\t$(\"input\", $scope).focus(function() {\n\t\t\t\t$(\".wcf-search-form\", $scope).addClass('wcf-search-form--focus');\n\t\t\t});\n\t\t\t$(\"input\", $scope).focusout(function() {\n\t\t\t\t$(\".wcf-search-form\", $scope).removeClass('wcf-search-form--focus');\n\t\t\t});\n\t\t};\n\t\telementorFrontend.hooks.addAction('frontend/element_ready/wcf--blog--search--form.default', Search);\n\t});\n})(jQuery);\n//# sourceMappingURL=wcf-addons.js.map\n"]}