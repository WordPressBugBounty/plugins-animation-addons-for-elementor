{"version":3,"file":"animated-heading.min.js","names":["$","AnimatedHeading","$scope","animated_heading","endTl","gsap","timeline","repeat","delay","scrollTrigger","trigger","start","set","opacity","to","duration","ease","once","chars","SplitText","type","startColor","attr","endColor","scaleY","stagger","transformOrigin","y","color","i","el","arr","ratio","hexToRgb","hex","bigint","parseInt","slice","startRGB","endRGB","resultRGB","map","Math","round","concat","x","toString","padStart","join","calculateGradientColor","length","window","on","elementorFrontend","hooks","addAction","jQuery"],"sources":["widgets/animated-heading.js"],"mappings":"CAAA,SAAUA,GAKT,IAAIC,EAAkB,SAAyBC,EAAQF,GACtD,IAAIG,EAAmBH,EAAE,qBAAsBE,GAC3CE,EAAQC,KAAKC,SAAS,CACzBC,QAAS,EACTC,MAAO,GACPC,cAAe,CACdC,QAASP,EACTQ,MAAO,uBAGTN,KAAKO,IAAIT,EAAkB,CAC1BU,QAAS,IAEVR,KAAKS,GAAGX,EAAkB,CACzBU,QAAS,EACTE,SAAU,EACVC,KAAM,aACNP,cAAe,CACdC,QAASP,EACTQ,MAAO,oBACPM,MAAM,KAGR,IAGIC,EAHc,IAAIC,UAAUhB,EAAkB,CACjDiB,KAAM,gBAEiBF,MAGpBG,EAAalB,EAAiBmB,KAAK,qBAAuB,UAC1DC,EAAWpB,EAAiBmB,KAAK,mBAAqB,UAsB1DlB,EAAMU,GAAGI,EAAO,CACfH,SAAU,GACVS,OAAQ,GACRR,KAAM,aACNS,QAAS,IACTC,gBAAiB,kBAElBtB,EAAMU,GAAGI,EAAO,CACfS,GAAI,GACJX,KAAM,UACNS,QAAS,IACTV,SAAU,IACR,IACHX,EAAMU,GAAGI,EAAO,CACfM,OAAQ,EACRR,KAAM,wBACNS,QAAS,IACTV,SAAU,KACR,IACHX,EAAMU,GAAGI,EAAO,CACfU,MAAO,SAAeC,EAAGC,EAAIC,GAC5B,OAxCF,SAAgCV,EAAYE,EAAUS,GACrD,IAAIC,EAAW,SAAkBC,GAChC,IAAIC,EAASC,SAASF,EAAIG,MAAM,GAAI,IACpC,MAAO,CAACF,GAAU,GAAK,IAAKA,GAAU,EAAI,IAAc,IAATA,EAChD,EAMIG,EAAWL,EAASZ,GACpBkB,EAASN,EAASV,GAClBiB,EAAYF,EAASG,KAAI,SAAS9B,EAAOkB,GAC5C,OAAOa,KAAKC,MAAMhC,EAAQqB,GAASO,EAAOV,GAAKlB,GAChD,IACA,MATQ,IAAIiC,OASIJ,EATOC,KAAI,SAASI,GAClC,OAAOA,EAAEC,SAAS,IAAIC,SAAS,EAAG,IACnC,IAAGC,KAAK,IAQV,CAwBSC,CAAuB5B,EAAYE,EAAUM,EAAIE,EAAImB,OAC7D,EACAlC,KAAM,aACNS,QAAS,IACTV,SAAU,IACR,IACHX,EAAMU,GAAGI,EAAO,CACfS,EAAG,EACHX,KAAM,OACNS,QAAS,IACTV,SAAU,IACR,IACHX,EAAMU,GAAGI,EAAO,CACfU,MAAOL,EACPR,SAAU,IACVU,QAAS,KAEX,EAGAzB,EAAEmD,QAAQC,GAAG,2BAA2B,WACvCC,kBAAkBC,MAAMC,UAAU,uDAAwDtD,EAC3F,GACA,CArGD,CAqGGuD","sourcesContent":["(function($) {\n\t/**\n\t * @param $scope The Widget wrapper element as a jQuery element\n\t * @param $ The jQuery alias\n\t */\n\tvar AnimatedHeading = function AnimatedHeading($scope, $) {\n\t\tvar animated_heading = $('.animated--heading', $scope);\n\t\tvar endTl = gsap.timeline({\n\t\t\trepeat: -1,\n\t\t\tdelay: 0.5,\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: animated_heading,\n\t\t\t\tstart: 'bottom 100%-=50px'\n\t\t\t}\n\t\t});\n\t\tgsap.set(animated_heading, {\n\t\t\topacity: 0\n\t\t});\n\t\tgsap.to(animated_heading, {\n\t\t\topacity: 1,\n\t\t\tduration: 1,\n\t\t\tease: 'power2.out',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: animated_heading,\n\t\t\t\tstart: 'bottom 100%-=50px',\n\t\t\t\tonce: true\n\t\t\t}\n\t\t});\n\t\tvar mySplitText = new SplitText(animated_heading, {\n\t\t\ttype: \"words,chars\"\n\t\t});\n\t\tvar chars = mySplitText.chars;\n\n\t\t// Define start and end colors in hex format\n\t\tvar startColor = animated_heading.attr('data-color-start') || '#ff0000'; // Default start color\n\t\tvar endColor = animated_heading.attr('data-color-end') || '#0000ff'; // Default end color\n\n\t\t// Function to calculate intermediate colors\n\t\tfunction calculateGradientColor(startColor, endColor, ratio) {\n\t\t\tvar hexToRgb = function hexToRgb(hex) {\n\t\t\t\tvar bigint = parseInt(hex.slice(1), 16);\n\t\t\t\treturn [bigint >> 16 & 255, bigint >> 8 & 255, bigint & 255];\n\t\t\t};\n\t\t\tvar rgbToHex = function rgbToHex(rgb) {\n\t\t\t\treturn \"#\".concat(rgb.map(function(x) {\n\t\t\t\t\treturn x.toString(16).padStart(2, '0');\n\t\t\t\t}).join(''));\n\t\t\t};\n\t\t\tvar startRGB = hexToRgb(startColor);\n\t\t\tvar endRGB = hexToRgb(endColor);\n\t\t\tvar resultRGB = startRGB.map(function(start, i) {\n\t\t\t\treturn Math.round(start + ratio * (endRGB[i] - start));\n\t\t\t});\n\t\t\treturn rgbToHex(resultRGB);\n\t\t}\n\n\t\t// Define animations without Chroma\n\t\tendTl.to(chars, {\n\t\t\tduration: 0.5,\n\t\t\tscaleY: 0.6,\n\t\t\tease: \"power3.out\",\n\t\t\tstagger: 0.04,\n\t\t\ttransformOrigin: 'center bottom'\n\t\t});\n\t\tendTl.to(chars, {\n\t\t\ty: -15,\n\t\t\tease: \"elastic\",\n\t\t\tstagger: 0.03,\n\t\t\tduration: 0.8\n\t\t}, 0.5);\n\t\tendTl.to(chars, {\n\t\t\tscaleY: 1,\n\t\t\tease: \"elastic.out(2.5, 0.2)\",\n\t\t\tstagger: 0.03,\n\t\t\tduration: 1.5\n\t\t}, 0.5);\n\t\tendTl.to(chars, {\n\t\t\tcolor: function color(i, el, arr) {\n\t\t\t\treturn calculateGradientColor(startColor, endColor, i / arr.length);\n\t\t\t},\n\t\t\tease: \"power2.out\",\n\t\t\tstagger: 0.03,\n\t\t\tduration: 0.3\n\t\t}, 0.5);\n\t\tendTl.to(chars, {\n\t\t\ty: 0,\n\t\t\tease: \"back\",\n\t\t\tstagger: 0.03,\n\t\t\tduration: 0.8\n\t\t}, 0.7);\n\t\tendTl.to(chars, {\n\t\t\tcolor: endColor,\n\t\t\tduration: 1.4,\n\t\t\tstagger: 0.05\n\t\t});\n\t};\n\n\t// Make sure you run this code under Elementor.\n\t$(window).on('elementor/frontend/init', function() {\n\t\telementorFrontend.hooks.addAction('frontend/element_ready/wcf--animated-heading.default', AnimatedHeading);\n\t});\n})(jQuery);\n//# sourceMappingURL=animated-heading.js.map\n"]}