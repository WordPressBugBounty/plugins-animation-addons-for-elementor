{"version":3,"file":"image-compare.min.js","names":["_typeof","o","Symbol","iterator","constructor","prototype","$","ImageCompare","$scope","$comparisonSlider","$sliderLeft","find","$handle","$caption","$captionLeft","$captionRight","$comparisonSliderWidth","width","$comparisonSliderHeight","height","$startPosition","$btnExpandLeft","$btnExpandCenter","$btnExpandRight","gsap","tl","timeline","delay","set","autoAlpha","yPercent","to","duration","ease","x","stagger","Draggable","create","type","bounds","minX","minY","maxX","maxY","edgeResistance","throwProps","onDrag","this","endX","getDirection","showLeftCaption","showRightCaption","onLockAxis","console","log","slideHandleTo","position","posX","on","window","elementorFrontend","hooks","addAction","jQuery"],"sources":["widgets/image-compare.js"],"mappings":"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","sourcesContent":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function ($) {\n  /**\r\n   * @param $scope The Widget wrapper element as a jQuery element\r\n   * @param $ The jQuery alias\r\n   */\n  var ImageCompare = function ImageCompare($scope, $) {\n    var $comparisonSlider = $('.wcf--image-compare', $scope);\n    var $sliderLeft = $comparisonSlider.find('.slider-left', $scope);\n    var $handle = $comparisonSlider.find('.wcf--image-compare-handle', $scope);\n    var $caption = $comparisonSlider.find('.slider-caption', $scope);\n    var $captionLeft = $comparisonSlider.find('.slider-caption-left', $scope);\n    var $captionRight = $comparisonSlider.find('.slider-caption-right', $scope);\n    var $comparisonSliderWidth = $comparisonSlider.width();\n    var $comparisonSliderHeight = $comparisonSlider.height();\n    var $startPosition = $comparisonSliderWidth / 100 * 50;\n    var $btnExpandLeft = $('.btn-expand-left', $scope);\n    var $btnExpandCenter = $('.btn-expand-center', $scope);\n    var $btnExpandRight = $('.btn-expand-right', $scope);\n\n    // GSAP Timeline\n    if ((typeof gsap === \"undefined\" ? \"undefined\" : _typeof(gsap)) === \"object\") {\n      var tl = gsap.timeline({\n        delay: 1\n      });\n\n      // Set initial positioning and animations\n      tl.set($caption, {\n        autoAlpha: 0,\n        yPercent: -100\n      });\n      tl.to($sliderLeft, {\n        duration: 0.7,\n        width: $startPosition,\n        ease: \"back.out(1.7)\"\n      });\n      tl.to($handle, {\n        duration: 0.7,\n        x: $startPosition,\n        ease: \"back.out(1.7)\"\n      });\n      tl.to($caption, {\n        duration: 0.7,\n        autoAlpha: 1,\n        yPercent: 0,\n        ease: \"back.inOut(3)\",\n        stagger: -0.3\n      });\n\n      // Draggable\n      Draggable.create($handle, {\n        type: \"x\",\n        bounds: {\n          minX: 0,\n          minY: 0,\n          maxX: $comparisonSliderWidth,\n          maxY: $comparisonSliderHeight\n        },\n        edgeResistance: 1,\n        throwProps: true,\n        onDrag: onHandleDrag,\n        onLockAxis: function onLockAxis() {\n          console.log(\"onLockAxis\");\n        }\n      });\n    }\n\n    // Drag Function\n    function onHandleDrag() {\n      gsap.set($sliderLeft, {\n        width: this.endX\n      });\n\n      // Show/hide captions based on the handle's drag position and direction\n      if (this.endX >= this.maxX / 2 && this.getDirection() === \"right\") {\n        showLeftCaption();\n      }\n      if (this.endX <= this.maxX / 2 && this.getDirection() === \"left\") {\n        showRightCaption();\n      }\n    }\n\n    // Caption Functions\n    function showLeftCaption() {\n      gsap.to($captionLeft, {\n        duration: 0.3,\n        autoAlpha: 1,\n        yPercent: 0\n      });\n      gsap.to($captionRight, {\n        duration: 0.3,\n        autoAlpha: 0,\n        yPercent: -100\n      });\n    }\n    function showRightCaption() {\n      gsap.to($captionLeft, {\n        duration: 0.3,\n        autoAlpha: 0,\n        yPercent: -100\n      });\n      gsap.to($captionRight, {\n        duration: 0.3,\n        autoAlpha: 1,\n        yPercent: 0\n      });\n    }\n    function showBothCaptions() {\n      gsap.to([$captionLeft, $captionRight], {\n        duration: 0.3,\n        autoAlpha: 1,\n        yPercent: 0\n      });\n    }\n\n    // Slide Handle Function\n    function slideHandleTo(position) {\n      var posX = $comparisonSliderWidth / 100 * position;\n      gsap.to($sliderLeft, {\n        duration: 0.5,\n        width: posX,\n        ease: \"power2.out\"\n      });\n      gsap.to($handle, {\n        duration: 0.5,\n        x: posX,\n        ease: \"power2.out\"\n      });\n    }\n\n    // Click Handlers\n    $btnExpandLeft.on(\"click\", function () {\n      slideHandleTo(100);\n      showLeftCaption();\n    });\n    $btnExpandCenter.on(\"click\", function () {\n      slideHandleTo(50);\n      showBothCaptions();\n    });\n    $btnExpandRight.on(\"click\", function () {\n      slideHandleTo(0);\n      showRightCaption();\n    });\n  };\n\n  // Make sure you run this code under Elementor.\n  $(window).on('elementor/frontend/init', function () {\n    elementorFrontend.hooks.addAction('frontend/element_ready/wcf--image-compare.default', ImageCompare);\n  });\n})(jQuery);"]}