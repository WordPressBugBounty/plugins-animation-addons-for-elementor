{"version":3,"file":"progressbar.js","names":["$","WcfProgressbar","$scope","progressbarWrap","progressbar","find","settings","data","percent","dotAnimation","count","animationDots","Math","floor","animation","setInterval","clearInterval","addClass","progressAnimation","progressBar","progressbarOptions","strokeWidth","trailWidth","color","trailColor","duration","value","rightValue","position","right","ProgressBar","Line","Circle","createObserver","options","root","threshold","rootMargin","IntersectionObserver","entries","forEach","entry","isIntersecting","animate","observer","unobserve","target","observe","removeAttr","window","on","elementorFrontend","hooks","addAction","jQuery"],"sources":["widgets/progressbar.js"],"sourcesContent":["/* global WCF_ADDONS_JS */\r\n(function ($) {\r\n    /**\r\n     * @param $scope The Widget wrapper element as a jQuery element\r\n     * @param $ The jQuery alias\r\n     */\r\n    const WcfProgressbar = function ($scope, $) {\r\n\r\n        const progressbarWrap = $('.wcf__progressbar ', $scope);\r\n        const progressbar = progressbarWrap.find('.progressbar');\r\n        const settings = progressbarWrap.data('settings');\r\n        const percent = settings['percentage'] / 100;\r\n\r\n        const dotAnimation = function () {\r\n            let count = 0;\r\n            let animationDots = Math.floor(percent * 100 / 20);\r\n            let animation = setInterval(function () {\r\n                if (count >= animationDots) {\r\n                    clearInterval(animation)\r\n                } else {\r\n                    $(progressbar.find('.dot')[count]).addClass('active');\r\n                    count++;\r\n                }\r\n            }, 500);\r\n        }\r\n\r\n        const progressAnimation = function () {\r\n\r\n            let progressBar = null;\r\n\r\n            const progressbarOptions = {\r\n                strokeWidth: settings['stroke-width'],\r\n                trailWidth: settings['trail-width'],\r\n                color: settings['color'],\r\n                trailColor: settings['trail-color'],\r\n                duration: 1400,\r\n            }\r\n\r\n            //show percentage\r\n            if ('show' === settings['display-percentage']) {\r\n\r\n                progressbarOptions['text'] = {\r\n                    value: settings['percentage'] + '%',\r\n                }\r\n\r\n                if ('line' === settings['progress-type']) {\r\n                    const rightValue = 100 - settings['percentage'];\r\n                    progressbarOptions['text']['style'] = {\r\n                        position: 'absolute',\r\n                        right: rightValue + '%',\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ('line' === settings['progress-type']) {\r\n                progressBar = new ProgressBar.Line(progressbar[0], progressbarOptions);\r\n            }\r\n\r\n            if ('circle' === settings['progress-type']) {\r\n                progressBar = new ProgressBar.Circle(progressbar[0], progressbarOptions);\r\n            }\r\n\r\n            return progressBar;\r\n        }\r\n\r\n        let createObserver = function () {\r\n            const options = {\r\n                root: null,\r\n                threshold: 0,\r\n                rootMargin: '0px'\r\n            };\r\n            return new IntersectionObserver(entries => {\r\n                entries.forEach(entry => {\r\n                    if (entry.isIntersecting) {\r\n                        if ('dot' === settings['progress-type']) {\r\n                            dotAnimation();\r\n                        } else {\r\n                            progressAnimation().animate(percent);\r\n                        }\r\n\r\n                        observer.unobserve(entry.target)\r\n                    }\r\n                });\r\n            }, options);\r\n        }\r\n\r\n        const observer = createObserver();\r\n\r\n        observer.observe(progressbarWrap[0]);\r\n\r\n        //remove the attribute after getting the progressbar settings\r\n        progressbarWrap.removeAttr('data-settings');\r\n    };\r\n\r\n    // Make sure you run this code under Elementor.\r\n    $(window).on('elementor/frontend/init', function () {\r\n        elementorFrontend.hooks.addAction('frontend/element_ready/wcf--progressbar.default', WcfProgressbar);\r\n    });\r\n\r\n})(jQuery);\r\n"],"mappings":"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"}