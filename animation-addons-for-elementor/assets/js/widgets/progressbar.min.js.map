{"version":3,"file":"progressbar.min.js","names":["$","WcfProgressbar","$scope","progressbarWrap","progressbar","find","settings","data","percent","observer","IntersectionObserver","entries","forEach","entry","count","animationDots","animation","isIntersecting","Math","floor","setInterval","clearInterval","addClass","progressBar","progressbarOptions","strokeWidth","trailWidth","color","trailColor","duration","value","rightValue","position","right","ProgressBar","Line","Circle","progressAnimation","animate","unobserve","target","root","threshold","rootMargin","observe","removeAttr","window","on","elementorFrontend","hooks","addAction","jQuery"],"sources":["widgets/progressbar.js"],"mappings":"CACA,SAAUA,GAKT,IAAIC,EAAiB,SAAwBC,EAAQF,GACpD,IAAIG,EAAkBH,EAAE,qBAAsBE,GAC1CE,EAAcD,EAAgBE,KAAK,gBACnCC,EAAWH,EAAgBI,KAAK,YAChCC,EAAUF,EAAqB,WAAI,IA+DnCG,EAbI,IAAIC,sBAAqB,SAASC,GACxCA,EAAQC,SAAQ,SAASC,GAlDR,IACdC,EACAC,EACAC,EAgDEH,EAAMI,iBACL,QAAUX,EAAS,kBAnDtBQ,EAAQ,EACRC,EAAgBG,KAAKC,MAAgB,IAAVX,EAAgB,IAC3CQ,EAAYI,aAAY,WACvBN,GAASC,EACZM,cAAcL,IAEdhB,EAAEI,EAAYC,KAAK,QAAQS,IAAQQ,SAAS,UAC5CR,IAEF,GAAG,MAEoB,WACvB,IAAIS,EAAc,KACdC,EAAqB,CACxBC,YAAanB,EAAS,gBACtBoB,WAAYpB,EAAS,eACrBqB,MAAOrB,EAAgB,MACvBsB,WAAYtB,EAAS,eACrBuB,SAAU,MAIX,GAAI,SAAWvB,EAAS,wBACvBkB,EAAyB,KAAI,CAC5BM,MAAOxB,EAAqB,WAAI,KAE7B,SAAWA,EAAS,kBAAkB,CACzC,IAAIyB,EAAa,IAAMzB,EAAqB,WAC5CkB,EAAyB,KAAS,MAAI,CACrCQ,SAAU,WACVC,MAAOF,EAAa,IAEtB,CAQD,MANI,SAAWzB,EAAS,mBACvBiB,EAAc,IAAIW,YAAYC,KAAK/B,EAAY,GAAIoB,IAEhD,WAAalB,EAAS,mBACzBiB,EAAc,IAAIW,YAAYE,OAAOhC,EAAY,GAAIoB,IAE/CD,CACR,CAaKc,GAAoBC,QAAQ9B,GAE7BC,EAAS8B,UAAU1B,EAAM2B,QAE3B,GACD,GAhBc,CACbC,KAAM,KACNC,UAAW,EACXC,WAAY,QAgBdlC,EAASmC,QAAQzC,EAAgB,IAGjCA,EAAgB0C,WAAW,gBAC5B,EAGA7C,EAAE8C,QAAQC,GAAG,2BAA2B,WACvCC,kBAAkBC,MAAMC,UAAU,kDAAmDjD,EACtF,GACA,CAnFD,CAmFGkD","sourcesContent":["/* global WCF_ADDONS_JS */\n(function($) {\n\t/**\n\t * @param $scope The Widget wrapper element as a jQuery element\n\t * @param $ The jQuery alias\n\t */\n\tvar WcfProgressbar = function WcfProgressbar($scope, $) {\n\t\tvar progressbarWrap = $('.wcf__progressbar ', $scope);\n\t\tvar progressbar = progressbarWrap.find('.progressbar');\n\t\tvar settings = progressbarWrap.data('settings');\n\t\tvar percent = settings['percentage'] / 100;\n\t\tvar dotAnimation = function dotAnimation() {\n\t\t\tvar count = 0;\n\t\t\tvar animationDots = Math.floor(percent * 100 / 20);\n\t\t\tvar animation = setInterval(function() {\n\t\t\t\tif (count >= animationDots) {\n\t\t\t\t\tclearInterval(animation);\n\t\t\t\t} else {\n\t\t\t\t\t$(progressbar.find('.dot')[count]).addClass('active');\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}, 500);\n\t\t};\n\t\tvar progressAnimation = function progressAnimation() {\n\t\t\tvar progressBar = null;\n\t\t\tvar progressbarOptions = {\n\t\t\t\tstrokeWidth: settings['stroke-width'],\n\t\t\t\ttrailWidth: settings['trail-width'],\n\t\t\t\tcolor: settings['color'],\n\t\t\t\ttrailColor: settings['trail-color'],\n\t\t\t\tduration: 1400\n\t\t\t};\n\n\t\t\t//show percentage\n\t\t\tif ('show' === settings['display-percentage']) {\n\t\t\t\tprogressbarOptions['text'] = {\n\t\t\t\t\tvalue: settings['percentage'] + '%'\n\t\t\t\t};\n\t\t\t\tif ('line' === settings['progress-type']) {\n\t\t\t\t\tvar rightValue = 100 - settings['percentage'];\n\t\t\t\t\tprogressbarOptions['text']['style'] = {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tright: rightValue + '%'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ('line' === settings['progress-type']) {\n\t\t\t\tprogressBar = new ProgressBar.Line(progressbar[0], progressbarOptions);\n\t\t\t}\n\t\t\tif ('circle' === settings['progress-type']) {\n\t\t\t\tprogressBar = new ProgressBar.Circle(progressbar[0], progressbarOptions);\n\t\t\t}\n\t\t\treturn progressBar;\n\t\t};\n\t\tvar createObserver = function createObserver() {\n\t\t\tvar options = {\n\t\t\t\troot: null,\n\t\t\t\tthreshold: 0,\n\t\t\t\trootMargin: '0px'\n\t\t\t};\n\t\t\treturn new IntersectionObserver(function(entries) {\n\t\t\t\tentries.forEach(function(entry) {\n\t\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\t\tif ('dot' === settings['progress-type']) {\n\t\t\t\t\t\t\tdotAnimation();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprogressAnimation().animate(percent);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobserver.unobserve(entry.target);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, options);\n\t\t};\n\t\tvar observer = createObserver();\n\t\tobserver.observe(progressbarWrap[0]);\n\n\t\t//remove the attribute after getting the progressbar settings\n\t\tprogressbarWrap.removeAttr('data-settings');\n\t};\n\n\t// Make sure you run this code under Elementor.\n\t$(window).on('elementor/frontend/init', function() {\n\t\telementorFrontend.hooks.addAction('frontend/element_ready/wcf--progressbar.default', WcfProgressbar);\n\t});\n})(jQuery);\n//# sourceMappingURL=progressbar.js.map\n"]}