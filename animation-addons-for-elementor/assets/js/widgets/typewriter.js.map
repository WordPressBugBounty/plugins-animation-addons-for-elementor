{"version":3,"file":"typewriter.js","names":["$","WcfTypewriter","$scope","typewriterElement","textArray","data","Array","isArray","console","warn","typing","index","text","textIndex","typingInterval","setInterval","length","substr","setTimeout","deleting","clearInterval","deletingInterval","window","on","elementorFrontend","hooks","addAction","jQuery"],"sources":["widgets/typewriter.js"],"sourcesContent":["(function ($) {\r\n    /**\r\n     * @param $scope The Widget wrapper element as a jQuery element\r\n     * @param $ The jQuery alias\r\n     */\r\n    var WcfTypewriter = function WcfTypewriter($scope, $) {\r\n\r\n        const typewriterElement = $('.typed_list', $scope);\r\n\r\n        // Retrieve the text array from data attribute\r\n        const textArray = typewriterElement.data('text');\r\n\r\n        if (!textArray || !Array.isArray(textArray)) {\r\n            console.warn('Typewriter text data is missing or not in array format.');\r\n            return;\r\n        }\r\n\r\n        typing(0, textArray);\r\n\r\n        function typing(index, text) {\r\n            let textIndex = 1;\r\n\r\n            let typingInterval = setInterval(function () {\r\n                if (textIndex < text[index].length + 1) {\r\n                    typewriterElement.text(text[index].substr(0, textIndex));\r\n                    textIndex++;\r\n                } else {\r\n                    setTimeout(function () {\r\n                        deleting(index, text);\r\n                    }, 2000);\r\n                    clearInterval(typingInterval);\r\n                }\r\n            }, 150);\r\n        }\r\n\r\n        function deleting(index, text) {\r\n            let textIndex = text[index].length;\r\n\r\n            let deletingInterval = setInterval(function () {\r\n                if (textIndex + 1 > 0) {\r\n                    typewriterElement.text(text[index].substr(0, textIndex));\r\n                    textIndex--;\r\n                } else {\r\n                    index = (index + 1) % text.length;  // Loop to the next text in the array\r\n                    typing(index, text);\r\n                    clearInterval(deletingInterval);\r\n                }\r\n            }, 150);\r\n        }\r\n\r\n    };\r\n\r\n    // Initialize the typewriter effect on Elementor widget load\r\n    $(window).on('elementor/frontend/init', function () {\r\n        elementorFrontend.hooks.addAction('frontend/element_ready/wcf--typewriter.default', WcfTypewriter);\r\n    });\r\n})(jQuery);"],"mappings":"AAAA,CAAC,UAAUA,CAAC,EAAE;EACV;AACJ;AACA;AACA;EACI,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAACC,MAAM,EAAEF,CAAC,EAAE;IAElD,IAAMG,iBAAiB,GAAGH,CAAC,CAAC,aAAa,EAAEE,MAAM,CAAC;;IAElD;IACA,IAAME,SAAS,GAAGD,iBAAiB,CAACE,IAAI,CAAC,MAAM,CAAC;IAEhD,IAAI,CAACD,SAAS,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,EAAE;MACzCI,OAAO,CAACC,IAAI,CAAC,yDAAyD,CAAC;MACvE;IACJ;IAEAC,MAAM,CAAC,CAAC,EAAEN,SAAS,CAAC;IAEpB,SAASM,MAAMA,CAACC,KAAK,EAAEC,IAAI,EAAE;MACzB,IAAIC,SAAS,GAAG,CAAC;MAEjB,IAAIC,cAAc,GAAGC,WAAW,CAAC,YAAY;QACzC,IAAIF,SAAS,GAAGD,IAAI,CAACD,KAAK,CAAC,CAACK,MAAM,GAAG,CAAC,EAAE;UACpCb,iBAAiB,CAACS,IAAI,CAACA,IAAI,CAACD,KAAK,CAAC,CAACM,MAAM,CAAC,CAAC,EAAEJ,SAAS,CAAC,CAAC;UACxDA,SAAS,EAAE;QACf,CAAC,MAAM;UACHK,UAAU,CAAC,YAAY;YACnBC,QAAQ,CAACR,KAAK,EAAEC,IAAI,CAAC;UACzB,CAAC,EAAE,IAAI,CAAC;UACRQ,aAAa,CAACN,cAAc,CAAC;QACjC;MACJ,CAAC,EAAE,GAAG,CAAC;IACX;IAEA,SAASK,QAAQA,CAACR,KAAK,EAAEC,IAAI,EAAE;MAC3B,IAAIC,SAAS,GAAGD,IAAI,CAACD,KAAK,CAAC,CAACK,MAAM;MAElC,IAAIK,gBAAgB,GAAGN,WAAW,CAAC,YAAY;QAC3C,IAAIF,SAAS,GAAG,CAAC,GAAG,CAAC,EAAE;UACnBV,iBAAiB,CAACS,IAAI,CAACA,IAAI,CAACD,KAAK,CAAC,CAACM,MAAM,CAAC,CAAC,EAAEJ,SAAS,CAAC,CAAC;UACxDA,SAAS,EAAE;QACf,CAAC,MAAM;UACHF,KAAK,GAAG,CAACA,KAAK,GAAG,CAAC,IAAIC,IAAI,CAACI,MAAM,CAAC,CAAE;UACpCN,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC;UACnBQ,aAAa,CAACC,gBAAgB,CAAC;QACnC;MACJ,CAAC,EAAE,GAAG,CAAC;IACX;EAEJ,CAAC;;EAED;EACArB,CAAC,CAACsB,MAAM,CAAC,CAACC,EAAE,CAAC,yBAAyB,EAAE,YAAY;IAChDC,iBAAiB,CAACC,KAAK,CAACC,SAAS,CAAC,gDAAgD,EAAEzB,aAAa,CAAC;EACtG,CAAC,CAAC;AACN,CAAC,EAAE0B,MAAM,CAAC"}